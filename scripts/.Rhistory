theme(legend.position="bottom", panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.x = element_blank()) + guides(fill=guide_legend(nrow=5)) +
xlab("Plant Individuals") + ylab("Microbial Cov./Plant Cov.")+
scale_y_continuous(expand = c(0, 0), limits = c(0, 20))
dev.off()
pdf("~/Dropbox/controlled_metagenomics/results_figures/swedish_metagenome.pdf")
p <- ggplot(data=microb_melt_swed, aes(x=Load, y=value, fill=Family))
p + geom_bar(aes(), stat="identity", position="stack") +
scale_fill_manual(values = manual_colors) +
theme(legend.position="bottom", panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.x = element_blank()) + guides(fill=guide_legend(nrow=5)) +
xlab("Plant Individuals") + ylab("Microbial Cov./Plant Cov.")+
scale_y_continuous(expand = c(0, 0), limits = c(0, 20))+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
dev.off()
dev.off()
pdf("~/Dropbox/controlled_metagenomics/results_figures/swedish_metagenome.pdf")
p <- ggplot(data=microb_melt_swed, aes(x=Load, y=value, fill=Family))
p + geom_bar(aes(), stat="identity", position="stack") +
scale_fill_manual(values = manual_colors) +
theme(legend.position="bottom", panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.x = element_blank()) + guides(fill=guide_legend(nrow=5)) +
xlab("Plant Individuals") + ylab("Microbial Cov./Plant Cov.")+
scale_y_continuous(expand = c(0, 0), limits = c(0, 20))+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
dev.off()
p
p <- ggplot(data=microb_melt_swed, aes(x=Load, y=value, fill=Family))
p + geom_bar(aes(), stat="identity", position="stack") +
scale_fill_manual(values = manual_colors) +
theme(legend.position="bottom", panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.x = element_blank()) + guides(fill=guide_legend(nrow=5)) +
xlab("Plant Individuals") + ylab("Microbial Cov./Plant Cov.")+
scale_y_continuous(expand = c(0, 0), limits = c(0, 20))+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
dev.off()
pdf("~/Dropbox/controlled_metagenomics/results_figures/swedish_metagenome.pdf")
p <- ggplot(data=microb_melt_swed, aes(x=Load, y=value, fill=Family))
p + geom_bar(aes(), stat="identity", position="stack") +
scale_fill_manual(values = manual_colors) +
theme(legend.position="bottom", panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.x = element_blank()) + guides(fill=guide_legend(nrow=5)) +
xlab("Plant Individuals") + ylab("Microbial Cov./Plant Cov.")+
scale_y_continuous(expand = c(0, 0), limits = c(0, 20))+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())
dev.off()
microb_melt
microb_melt[is.na(microb_melt$variable),]$variable=0
microb_melt[is.na(microb_melt$variable),]
microb_melt$value
microb_melt[is.na(microb_melt$variable),]$value=0
microb_melt[is.na(microb_melt$value),]$value=0
microb_melt$value
microb_melt$Load=as.factor(-1*tot[microb_melt$variable])
manual_colors=c("darkblue", "darkgoldenrod1", "darkseagreen", "darkorchid", "darkolivegreen1", "lightskyblue", "darkgreen", "deeppink", "khaki2", "firebrick", "brown1", "darkorange1", "cyan1", "royalblue4", "darksalmon", "darkblue",
"royalblue4", "dodgerblue3", "steelblue1", "lightskyblue", "darkseagreen", "darkgoldenrod1", "darkseagreen", "darkorchid", "darkolivegreen1", "brown1", "darkorange1", "cyan1", "darkgrey")
p <- ggplot(data=microb_melt, aes(x=Load, y=value, fill=Family))
p + geom_bar(aes(), stat="identity", position="stack") +
scale_fill_manual(values = manual_colors) +
theme(legend.position="bottom", panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.x = element_blank()) +
guides(fill=guide_legend(nrow=5)) +
xlab("Plant Individuals") + ylab("Microbial Cov./Plant Cov.") +
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 225))
meta=read.table("~/work_main/abt6_projects9/metagenomic_controlled/data/processed_reads/german_samples/meta_family_corrected_per_plant.csv", sep=",", header=T, row.names = 1)
top10=names(sort(rowSums(meta, na.rm=TRUE), decreasing=TRUE )[1:10])
meta_microbiome=meta[top10_swed,]
rownames(meta_microbiome)=c(top10_swed)
rest=colSums(meta[rownames(meta) %ni% top10_swed, ], na.rm=TRUE)
meta_microbiome=rbind(meta_microbiome, rest)
rownames(meta_microbiome)[11]="Rest"
tot=colSums(meta_microbiome, na.rm=TRUE)
meta_microbiome$Family=rownames(meta_microbiome)
microb_melt=melt(meta_microbiome, id=c("Family"))
microb_melt[is.na(microb_melt$value),]$value=0
microb_melt$Load=as.factor(-1*tot[microb_melt$variable])
p <- ggplot(data=microb_melt, aes(x=Load, y=value, fill=Family))
p + geom_bar(aes(), stat="identity", position="stack") +
scale_fill_manual(values = manual_colors) +
theme(legend.position="bottom", panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.x = element_blank()) +
guides(fill=guide_legend(nrow=5)) +
xlab("Plant Individuals") + ylab("Microbial Cov./Plant Cov.") +
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 225))
pdf("~/Dropbox/controlled_metagenomics/results_figures/german_metagenome.pdf")
p <- ggplot(data=microb_melt, aes(x=Load, y=value, fill=Family))
p + geom_bar(aes(), stat="identity", position="stack") +
scale_fill_manual(values = manual_colors) +
theme(legend.position="bottom", panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.x = element_blank()) +
guides(fill=guide_legend(nrow=5)) +
xlab("Plant Individuals") + ylab("Microbial Cov./Plant Cov.") +
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 225))
dev.off()
library(phyloseq)
library(dada2)
library(dplyr)
library(tidyverse)
library(fossil)
library(msa)
library(DECIPHER)
library(genefilter)
library(phangorn)
library("RColorBrewer")
library(gplots)
library(sjstats)
library(nlme)
path="/Users/tkarasov/work_main"
source(paste(path, "/abt6_projects9/pathodopsis_microbiomes/scripts/16S/amp_seq_functions.R", sep=""))
seqtab.nochim = readRDS(paste(path,"/abt6_projects9/pathodopsis_microbiomes/data/processed_reads/16S/16S_12_2018/demult_python/16S_seqtab.rds", sep=""))
taxa=readRDS(paste(path,"/abt6_projects9/pathodopsis_microbiomes/data/processed_reads/16S/16S_12_2018/demult_python/16S_tax_final.rds", sep=""))
metadata=read.table(paste(path,"/abt6_projects9/pathodopsis_microbiomes/pathodopsis_git/data/v1_22_5_merged.txt", sep=""), header=T, sep=",")
seqs <- getSequences(seqtab.nochim)
names(seqs) <- seqs # This propagates to the tip labels of the tree
samples.out <- rownames(seqtab.nochim)
metadata_keep=metadata[metadata$Plant_ID%in%samples.out,]
meta_unique = metadata_keep %>% distinct()
metadata_organized=merge(data.frame(samples.out), meta_unique, by.x="samples.out", by.y="Plant_ID", all.x=TRUE)
head(metadata_organized)
subject <- sapply(strsplit(samples.out, "D"), `[`, 1)
samdf <- data.frame(Subject=metadata_organized$samples.out, Latitude=metadata_organized$Latitude, Longitude=metadata_organized$Longitude, Altitude=metadata_organized$Altitude.x, temp=metadata_organized$Air.temp, humid=metadata_organized$Air.humidity, hpa=metadata_organized$HpA_plant, TourID=metadata_organized$Tour.ID)
rownames(samdf) <- samdf$Subject
sample_names(seqtab.nochim)=samples.out
ps <- phyloseq(otu_table(seqtab.nochim, taxa_are_rows=FALSE),
sample_data(samdf),
tax_table(taxa))
GP = prune_samples(sample_sums(ps)>=1000, ps)
GPr  = transform_sample_counts(GP, function(otu) otu/sum(otu))
GP_0.01 = filter_taxa(GPr, kOverA(4, 0.01), TRUE)
head(GP_0.01)
GP_0.01
plot_taxa_summary(GP_0.01, "Genus")
summarize_taxa(GP_0.01, "Genus")
hm=as.matrix(data.frame(otu_table(GP_0.01)))
hm=hm[,-c(2)]
meta_subset=metadata_organized[which(metadata_organized$samples.out%in%rownames(hm)),]
meta_sorted <- arrange(meta_subset, Tour.ID)
hm_sorted = hm[match(as.character(meta_sorted$samples.out),rownames(hm)),]
head(hm_sorted)
dim(hm)
colnames(hm)
rownames(hm)
hm_sorted
otu_sig
otu_sig= spatial_sig(hm_sorted, meta_sorted)
spatial_sig<-function(hm_sorted, meta_sorted){
otu_vector=numeric(length=dim(hm_sorted)[2])
for(i in 1:dim(hm_sorted)[2]){
temp=cbind(hm_sorted[,i], meta_sorted)
colnames(temp)[1]="otu"
fit = lm(otu~Latitude, data=temp)
sig= summary(fit)$coefficients[,4][2]
#unrestricted_fit=lme(otu~(1|Pop_size)+Latitude, data=temp)
#restricted_fit=lmer(otu~(1|Pop_size), data=temp)
#AIC_temp=AIC(restricted_fit)-AIC(unrestricted_fit)
#print(y)
otu_vector[i]=sig
}
#FDR correct
otu_fin=p.adjust(otu_vector, "BH")
return(otu_vector)
}
otu_sig= spatial_sig(hm_sorted, meta_sorted)
otu_sig_map=rbind(hm_sorted, otu_sig)
otu_sig_map
tax_as=tax_table(GP_0.01)[,5][-c(2)]
otu_sig_map=rbind(otu_sig_map,t(tax_as))
rownames(otu_sig_map)[c((dim(otu_sig_map)[1]-1):(dim(otu_sig_map)[1]))]=c("FDR_padjust","tax_class")
FDR=which(rownames(otu_sig_map)=="FDR_padjust")
is_sig=otu_sig_map[,which(otu_sig_map[FDR,]<=0.05)]
t_is_sig=data.frame(t(is_sig))
t_is_sig
dim(t_is_sig)
colnames(t_is_sig)
min(t_is_sig$FDR_padjust)
min(as.numeric(as.character(t_is_sig$FDR_padjust)))
which(as.numeric(as.character(t_is_sig$FDR_padjust))==min(as.numeric(as.character(t_is_sig$FDR_padjust)))
)
t_is_sig[8,]
t_is_sig[8,1]
t_is_sig[8,2]
t_is_sig[8,3]
t_is_sig[8,4]
t_is_sig[8,5]
t_is_sig[8,6]
colnames(is_sig)
t_is_sig[8,]
t_is_sig[1,]
t_is_sig[1,2]
t_is_sig[1,1]
colnames(t_is_sig)
lat_long=metadata[match(rownames(is_sig), metadata$Plant_ID),][,c("Plant_ID", "Latitude", "Longitude")]
head(lat_long)
dim(lat_long)
is_sig_lat_long <- cbind(lat_long, is_sig)
head(is_sig_lat_long)
dim(is_sig_lat_long)
is_sig_lat_long[8,]
is_sig_lat_long[9,]
lat_long=metadata_organized[,c( "Longitude", "Latitude")]
rownames(lat_long)=metadata_organized$samples.out
dist_mat=as.matrix(earth.dist(lat_long))
diag(dist_mat)=NA
rownames(dist_mat)=rownames(lat_long)
colnames(dist_mat)=rownames(lat_long)
lat_long
head(is_sig)
FDR
is_sig
t_is_sig
dim(t_is_sig)
t_is_sig[8,]
t_is_sig[1,]
t_is_sig[2,]
t_is_sig[2,1]
t_is_sig[2,3]
t_is_sig[2,]
sphingo="TGGGGAATATTGGACAATGGGCGAAAGCCTGATCCAGCAATGCCGCGTGAGTGATGAAGGCCTTAGGGTTGTAAAGCTCTTTTACCCGGGATGATAATGACAGTACCGGGAGAATAAGCTCCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGGAGCTAGCGTTATTCGGAATTACTGGGCGTAAAGCGCACGTAGGCGGCTTTGTAAGTTAGAGGTGAAAGCCTGGAGCTCAACTCCAGAATTGCCTTTAAGACTGCATCGCTTGAATCCAGGAGAGGTGAGTGGAATTCCGAGTGTAGAGGTGAAATTCGTAGATATTCGGAAGAACACCAGTGGCGAAGGCGGCTCACTGGACTGGTATTGACGCTGAGGTGCGAAAGCGTGGGGAGCAAACAGG"
hm_sorted
dim(hm_sorted)
colnames(hm_sorted)
sphingo="TGGGGAATATTGGACAATGGGCGAAAGCCTGATCCAGCAATGCCGCGTGAGTGATGAAGGCCTTAGGGTTGTAAAGCTCTTTTACCCGGGATGATAATGACAGTACCGGGAGAATAAGCTCCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGGAGCTAGCGTTATTCGGAATTACTGGGCGTAAAGCGCACGTAGGCGGCTTTGTAAGTTAGAGGTGAAAGCCTGGAGCTCAACTCCAGAATTGCCTTTAAGACTGCATCGCTTGAATCCAGGAGAGGTGAGTGGAATTCCGAGTGTAGAGGTGAAATTCGTAGATATTCGGAAGAACACCAGTGGCGAAGGCGGCTCACTGGACTGGTATTGACGCTGAGGTGCGAAAGCGTGGGGAGCAAACAGG"
dim(hm_sorted)
hm_sphingo=hm[,sphingo]
hm_sphingo
lat_long
hm_sphingo
dim(hm_sphingo)
names(hm_sphingo)
dim(hm_sphingo)
length(hm_sphingo)
dim(lat_long)
head(lat_long)
head(hm_sphingo)
merge(lat_long, hm_sphingo)
hm_sphingo
hist(hm_sphingo)
lat_long
lat_sphing=lat_long[names(hm_sphingo)]
lat_sphing=lat_long[names(hm_sphingo),]
lat_sphing
dim(lat_sphing)
sphin_keep=cbind(lat_sphing, hm_sphingo)
head(sphin_keep)
plot(sphin_keep$Latitude, sphin_keep$hm_sphingo)
plot(sphin_keep$Latitude, sphin_keep$hm_sphingo, pch=20)
cor.test(sphin_keep$Latitude, sphin_keep$hm_sphingo)
which(as.numeric(as.character(t_is_sig$FDR_padjust))==min(as.numeric(as.character(t_is_sig$FDR_padjust)))
)
t_is_sig[8,]
hm_beij=hm[,beij]
beij="TGGGGAATATTGGACAATGGGCGCAAGCCTGATCCAGCCATGCCGCGTGAGTGATGAAGGCCTTAGGGTTGTAAAGCTCTTTTGTCCGGGACGATAATGACGGTACCGGAAGAATAAGCCCCGGCTAACTTCGTGCCAGCAGCCGCGGTAATACGAAGGGGGCTAGCGTTGCTCGGAATCACTGGGCGTAAAGGGCGCGTAGGCGGCCATTCAAGTCGGGGGTGAAAGCCTGTGGCTCAACCACAGAATTGCCTTCGATACTGTTTGGCTTGAGTTTGGTAGAGGTTGGTGGAACTGCGAGTGTAGAGGTGAAATTCGTAGATATTCGCAAGAACACCAGTGGCGAAGGCGGCCAACTGGACCAATACTGACGCTGAGGCGCGAAAGCGTGGGGAGCAAACAGG"
hm_beij=hm[,beij]
lat_beij=lat_long[names(hm_beij),]
beij_keep=cbind(lat_beij, hm_beij)
beij_keep
plot(beij_keep$Latitude, beij_keep$hm_beij)
cor.test(beij_keep$Latitude, beij_keep$hm_beij)
ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE) + theme_bw()
ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE) + theme_bw() + ylab("Fraction Relative Abundance")
ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=BLACK) + theme_bw() + ylab("Fraction Relative Abundance")
ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=Black) + theme_bw() + ylab("Fraction Relative Abundance")
ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Fraction Relative Abundance")
ggplot(data = sphing_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Fraction Relative Abundance")
sphin_keep=cbind(lat_sphing, hm_sphingo)
ggplot(data = sphing_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Fraction Relative Abundance")
ggplot(data = sphin_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Fraction Relative Abundance")
sphingo="TGGGGAATATTGGACAATGGGCGAAAGCCTGATCCAGCAATGCCGCGTGAGTGATGAAGGCCTTAGGGTTGTAAAGCTCTTTTACCCGGGATGATAATGACAGTACCGGGAGAATAAGCTCCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGGAGCTAGCGTTATTCGGAATTACTGGGCGTAAAGCGCACGTAGGCGGCTTTGTAAGTTAGAGGTGAAAGCCTGGAGCTCAACTCCAGAATTGCCTTTAAGACTGCATCGCTTGAATCCAGGAGAGGTGAGTGGAATTCCGAGTGTAGAGGTGAAATTCGTAGATATTCGGAAGAACACCAGTGGCGAAGGCGGCTCACTGGACTGGTATTGACGCTGAGGTGCGAAAGCGTGGGGAGCAAACAGG"
hm_sphingo=hm[,sphingo]
lat_sphing=lat_long[names(hm_sphingo),]
sphin_keep=cbind(lat_sphing, hm_sphingo)
ggplot(data = sphin_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Fraction Relative Abundance")
ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Fraction Relative Abundance")
beij="TGGGGAATATTGGACAATGGGCGCAAGCCTGATCCAGCCATGCCGCGTGAGTGATGAAGGCCTTAGGGTTGTAAAGCTCTTTTGTCCGGGACGATAATGACGGTACCGGAAGAATAAGCCCCGGCTAACTTCGTGCCAGCAGCCGCGGTAATACGAAGGGGGCTAGCGTTGCTCGGAATCACTGGGCGTAAAGGGCGCGTAGGCGGCCATTCAAGTCGGGGGTGAAAGCCTGTGGCTCAACCACAGAATTGCCTTCGATACTGTTTGGCTTGAGTTTGGTAGAGGTTGGTGGAACTGCGAGTGTAGAGGTGAAATTCGTAGATATTCGCAAGAACACCAGTGGCGAAGGCGGCCAACTGGACCAATACTGACGCTGAGGCGCGAAAGCGTGGGGAGCAAACAGG"
hm_beij=hm[,beij]
lat_beij=lat_long[names(hm_beij),]
beij_keep=cbind(lat_beij, hm_beij)
ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Fraction Relative Abundance")
hm_sphingo=hm[,sphingo]
lat_sphing=lat_long[names(hm_sphingo),]
sphin_keep=cbind(lat_sphing, hm_sphingo)
ggplot(data = sphin_keep, aes(x = Latitude, y = hm_beij)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Fraction Relative Abundance")
ggplot(data = sphin_keep, aes(x = Latitude, y = hm_sphing)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Fraction Relative Abundance")
ggplot(data = sphin_keep, aes(x = Latitude, y = hm_sphingo)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Fraction Relative Abundance")
ggplot(data = sphin_keep, aes(x = Latitude, y = hm_sphingo)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Fraction Relative Abundance")
ggplot(data = sphin_keep, aes(x = Latitude, y = hm_sphingo*100)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("PercentRelative Abundance")
ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij*100)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Percent Relative Abundance")
p = ggplot(data = sphin_keep, aes(x = Latitude, y = hm_sphingo*100)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Percent  Relative Abundance")
p+annotate("text", label = "plot mpg vs. wt", x = 2, y = 15, size = 8, colour = "red")
p+annotate("text", label = "plot mpg vs. wt", x = 40, y = 5, size = 8)
p+annotate("text", label = "plot mpg vs. wt", x = 60, y = 5, size = 8)
p+annotate("text", label = "Sphingomonas", x = 60, y = 5, size = 8)
p+annotate("text", label = "Sphingomonas\n R", x = 40, y = 5, size = 8)
p+annotate("text", label = "Sphingomonas\n R", x = 50, y = 5, size = 8)
p+annotate("text", label = "Sphingomonas\n R", x = 50, y = 5, size = 8, fontface=italic)
p+annotate("text", label = "Sphingomonas\n R", x = 50, y = 5, size = 8, fontface="italic")
p+annotate("text", label = "Sphingomonas\n R", x = 50, y = 5, size = 4, fontface="italic")
p+annotate("text", label = "Sphingomonas\n R", x = 55, y = 5, size = 4, fontface="italic")
p+annotate("text", label = "Sphingomonas\n R", x = 60, y = 5, size = 4, fontface="italic")
cor.test(sphin_keep$Latitude, sphin_keep$hm_sphingo)
sphin_keep
cor.test(sphin_keep$Latitude, sphin_keep$hm_sphingo)
is_sig_lat_long
is_sig_lat_long[4,]
colnames(t_is_sig)
t_is_sig[4,]
t_is_sig[8,]
cor.test(sphin_keep$Latitude, sphin_keep$hm_sphingo)
lb1 <- paste("R^2 == ", round(-0.1485174,4)) +
annotate("text", x=2, y=8, label=lb1, parse=TRUE)
lb1 <- paste("R^2 == ", round(-0.1485174,4)
) +
annotate("text", x=2, y=8, label=lb1, parse=TRUE)
lb1 <- paste("R^2 == ", round(-0.1485174,4))
lb1
p+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4, label=lb1, parse=TRUE)
p+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=5, label=lb1, parse=TRUE)
lb1 <- paste("R^2 == ", round(-0.1485174,2))
p+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=5.3, label=lb1, parse=TRUE)
p+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4.7, label=lb1, parse=TRUE)
lb1 <- paste("R == ", round(-0.1485174,2))
p+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4.7, label=lb1, parse=TRUE)
ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij*100)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Percent Relative Abundance") lb1 <- paste("R == ", round(-0.1485174,2))
p2 = ggplot(data = beij_keep, aes(x = Latitude, y = hm_beij*100)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Percent Relative Abundance")
cor.test(beij_keep$Latitude, beij_keep$hm_beij)
lb1 <- paste("R == ", round(-0.1791008,2))
p2+annotate("text", label = "Beij\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4.7, label=lb1, parse=TRUE)
p2+annotate("text", label = "Beij\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=7.5, label=lb1, parse=TRUE)
p2+annotate("text", label = "Beij\n ", x = 60, y = 7.6, size = 4, fontface="italic") + annotate("text", x=60, y=7.5, label=lb1, parse=TRUE)
lb1 <- paste("R == ", round(-0.1791008,2))
p2+annotate("text", label = "Methylobacteria", x = 60, y = 7.6, size = 4, fontface="italic") + annotate("text", x=60, y=7.5, label=lb1, parse=TRUE)
p2+annotate("text", label = "Methylobacteria", x = 60, y = 7.6, size = 4, fontface="italic") + annotate("text", x=60, y=7.3, label=lb1, parse=TRUE)
p2+annotate("text", label = "Methylobacteria", x = 60, y = 7.6, size = 4, fontface="italic") + annotate("text", x=60, y=7.2, label=lb1, parse=TRUE)
p2+annotate("text", label = "Methylobacteria", x = 60, y = 7.6, size = 4, fontface="italic") + annotate("text", x=60, y=7.1, label=lb1, parse=TRUE)
pdf(paste(path,"/abt6_projects9/pathodopsis_microbiomes/data/methylo_lat.pdf", sep=""))
lb1 <- paste("R == ", round(-0.1791008,2))
p2+annotate("text", label = "Methylobacteria", x = 60, y = 7.6, size = 4, fontface="italic") + annotate("text", x=60, y=7.1, label=lb1, parse=TRUE)
dev.off()
pdf(paste(path,"/abt6_projects9/pathodopsis_microbiomes/data/sphingo_lat.pdf", sep=""))
lb1 <- paste("R == ", round(-0.1485174,2))
p+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4.7, label=lb1, parse=TRUE)
dev.off()
p+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4.7, label=lb1, parse=TRUE)
lb1 <- paste("R == ", round(-0.1791008,2))
p2+annotate("text", label = "Methylobacteria", x = 60, y = 7.6, size = 4, fontface="italic") + annotate("text", x=60, y=7.1, label=lb1, parse=TRUE)
cor.test(beij_keep$Longitude, beij_keep$hm_beij)
cor.test(sphin_keep_keep$Longitude, sphin_keep$hm_beij)
cor.test(sphin_keep$Longitude, sphin_keep$hm_beij)
cor.test(sphin_keep$Longitude, sphin_keep$hm_sphingo)
pdf("~/Desktop/sphingo_lat.pdf")
lb1 <- paste("R == ", round(-0.1485174,2))
p+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4.7, label=lb1, parse=TRUE)
dev.off()
pdf("~/Desktop/sphingo_lat.pdf", height=5, width=7)
lb1 <- paste("R == ", round(-0.1485174,2))
p+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4.7, label=lb1, parse=TRUE)
dev.off()
pdf("~/Desktop/methylo_lat.pdf",  height=5, width=7))
lb1 <- paste("R == ", round(-0.1791008,2))
pdf("~/Desktop/methylo_lat.pdf",  height=5, width=7)
lb1 <- paste("R == ", round(-0.1791008,2))
p2+annotate("text", label = "Methylobacteria", x = 60, y = 7.6, size = 4, fontface="italic") + annotate("text", x=60, y=7.1, label=lb1, parse=TRUE)
dev.off()
pdf("~/Desktop/sphingo_lat.pdf", height=5, width=7,  useDingbats=FALSE)
lb1 <- paste("R == ", round(-0.1485174,2))
p+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4.7, label=lb1, parse=TRUE)
dev.off()
pdf("~/Desktop/methylo_lat.pdf",  height=5, width=7,  useDingbats=FALSE)
lb1 <- paste("R == ", round(-0.1791008,2))
p2+annotate("text", label = "Methylobacteria", x = 60, y = 7.6, size = 4, fontface="italic") + annotate("text", x=60, y=7.1, label=lb1, parse=TRUE)
dev.off()
meta_sorted
otu_vector=numeric(length=dim(hm_sorted)[2])
for(i in 1:dim(hm_sorted)[2]){
temp=cbind(hm_sorted[,i], meta_sorted)
colnames(temp)[1]="otu"
fit = lm(otu~Latitude, data=temp)
sig= summary(fit)$coefficients[,4][2]
#unrestricted_fit=lme(otu~(1|Pop_size)+Latitude, data=temp)
#restricted_fit=lmer(otu~(1|Pop_size), data=temp)
#AIC_temp=AIC(restricted_fit)-AIC(unrestricted_fit)
#print(y)
otu_vector[i]=sig
}
summary(fit)$coefficients[,4]
summary(fit)$coefficients
summary(fit)$coefficients[,1][2]
spatial_coeff<-function(hm_sorted, meta_sorted){
otu_vector=numeric(length=dim(hm_sorted)[2])
for(i in 1:dim(hm_sorted)[2]){
temp=cbind(hm_sorted[,i], meta_sorted)
colnames(temp)[1]="otu"
fit = lm(otu~Latitude, data=temp)
sig= summary(fit)$coefficients[,1][2]
#unrestricted_fit=lme(otu~(1|Pop_size)+Latitude, data=temp)
#restricted_fit=lmer(otu~(1|Pop_size), data=temp)
#AIC_temp=AIC(restricted_fit)-AIC(unrestricted_fit)
#print(y)
otu_vector[i]=sig
}
#FDR correct
otu_fin=p.adjust(otu_vector, "BH")
return(otu_vector)
}
coe=spatial_coeff(hm_sorted, meta_sorted)
coe
hist(coe)
plot(cdf(coe))
plot(ecdf(coe))
mean(coe)
median(coe)
otu_sig
cbind(otu_sig, coe)
both=cbind(otu_sig, coe)
both[which(both[,1]<0.05),]
both[which(both[,1]<0.05),2]
plot(ecdf(both[which(both[,1]<0.05),2]))
hist(both[which(both[,1]<0.05),2])
hist(both[which(both[,1]<0.05),2], breaks=10)
hist(both[which(both[,1]<0.05),2], breaks=30)
p_sp_long=ggplot(data = sphin_keep, aes(x = Longitude, y = hm_sphingo*100)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Percent  Relative Abundance")
p_sp_long
cor_long_sp=cor.test(sphin_keep$Longitude, sphin_keep$hm_sphingo)
cor_long_sp
cor_long_sp[1]
cor_long_sp[2]
cor_long_sp[3]
cor_long_sp[4]
lb1 <- paste("R == ", round(cor_long_sp,2))
cor_long_sp=cor.test(sphin_keep$Longitude, sphin_keep$hm_sphingo)[4]
lb1 <- paste("R == ", round(cor_long_sp,2))
lb1
cor_long_sp
cor_long_sp[1]
cor_long_sp[1]$estimate
cor_long_sp=cor.test(sphin_keep$Longitude, sphin_keep$hm_sphingo)[4]$estimate
cor_long_sp
lb1 <- paste("R == ", round(cor_long_sp,2))
p_sp_long+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4.7, label=lb1, parse=TRUE)
p_sp_long+annotate("text", label = "Sphingomonas\n ", x = 25, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4.7, label=lb1, parse=TRUE)
p_sp_long=ggplot(data = sphin_keep, aes(x = Longitude, y = hm_sphingo*100)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Percent  Relative Abundance")
p_sp_long+annotate("text", label = "Sphingomonas\n ", x = 25, y = 5, size = 4, fontface="italic")+annotate("text", label = "Sphingomonas\n ", x = 60, y = 5, size = 4, fontface="italic") + annotate("text", x=60, y=4.7, label=lb1, parse=TRUE)
p_sp_long+annotate("text", label = "Sphingomonas\n ", x = 25, y = 5, size = 4, fontface="italic")+ annotate("text", x=25, y=4.7, label=lb1, parse=TRUE)
p_sp_long+annotate("text", label = "Sphingomonas\n ", x = 25, y = 5, size = 4, fontface="italic")+ annotate("text", x=25, y=4.8, label=lb1, parse=TRUE)
p_sp_long+annotate("text", label = "Sphingomonas\n ", x = 40, y = 5, size = 4, fontface="italic")+ annotate("text", x=25, y=4.8, label=lb1, parse=TRUE)
p_sp_long+annotate("text", label = "Sphingomonas\n ", x = 40, y = 5, size = 4, fontface="italic")+ annotate("text", x=40, y=4.8, label=lb1, parse=TRUE)
p_sp_long=ggplot(data = sphin_keep, aes(x = Longitude, y = hm_sphingo*100)) +
geom_point(color='gray') +
geom_smooth(method = "lm", se = FALSE, color=1) + theme_bw() + ylab("Percent  Relative Abundance")
pdf("~/Desktop/sphingo_long.pdf", height=5, width=7,  useDingbats=FALSE)
cor_long_sp=cor.test(sphin_keep$Longitude, sphin_keep$hm_sphingo)[4]$estimate
lb1 <- paste("R == ", round(cor_long_sp,2))
p_sp_long+annotate("text", label = "Sphingomonas\n ", x = 40, y = 5, size = 4, fontface="italic")+ annotate("text", x=40, y=4.8, label=lb1, parse=TRUE)
dev.off()
cor_long_sp=cor.test(beij_keep$Longitude, beij_keep$hm_beij)[4]$estimate
lb1 <- paste("R == ", round(cor_long_sp,2))
p_sp_long+annotate("text", label = "Sphingomonas\n ", x = 40, y = 5, size = 4, fontface="italic")+ annotate("text", x=40, y=4.8, label=lb1, parse=TRUE)
pdf("~/Desktop/meth_lat.pdf", height=5, width=7,  useDingbats=FALSE)
cor_long_met=cor.test(beij_keep$Longitude, beij_keep$hm_beij)[4]$estimate
lb1 <- paste("R == ", round(cor_long_met,2))
p_sp_long+annotate("text", label = "Methylobacteria\n ", x = 40, y = 5, size = 4, fontface="italic")+ annotate("text", x=40, y=4.8, label=lb1, parse=TRUE)
dev.off()
pdf("~/Desktop/meth_long.pdf", height=5, width=7,  useDingbats=FALSE)
cor_long_met=cor.test(beij_keep$Longitude, beij_keep$hm_beij)[4]$estimate
lb1 <- paste("R == ", round(cor_long_met,2))
p_sp_long+annotate("text", label = "Methylobacteria\n ", x = 40, y = 5, size = 4, fontface="italic")+ annotate("text", x=40, y=4.8, label=lb1, parse=TRUE)
dev.off()
