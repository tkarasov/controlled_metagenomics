all6=all[all$Day==6,]
plot(all6$load, all6$ratio, pch=20)
all6
all[all$ratio==NA]
all[all$ratio==NA,]
all[is.na(ratio)==TRUE,]
all[is.na(all$ratio)==TRUE,]
all=all[is.na(all$ratio)==FALSE,]
ggplot(data=all, aes(x=log10(FINAL+.00001), y=log10(load))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
load_plot=all%>% group_by(Day, Genotype) %>% summarise(mean = mean((load), na.rm=T), se = sd((load), na.rm=T) / length(load))
cfu_plot=all%>% group_by(Day, Genotype) %>% summarise(mean = mean((FINAL), na.rm=T), se = sd(FINAL, na.rm=T) / length(FINAL))
qpcr_plot=all%>% group_by(Day, Genotype) %>% summarise(mean = mean((ratio), na.rm=T), se = sd(ratio, na.rm=T) / length(ratio))
df <- bind_rows(CFU=cfu_plot, qPCR=qpcr_plot, Metagenome=load_plot, .id="group")
ggplot(df, aes(x=Day, y=mean, group=Genotype, colour=Genotype))+geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1) +
geom_point()+theme_bw()+geom_line()+theme_bw()+
facet_wrap(~group , scales = "free_y", ncol=1, strip.position = "left" )             +
ylab(NULL) + theme(legend.position = "none") + scale_color_manual(values = wes_palette(n=3, name="GrandBudapest1"))
dim(all)
dim(meta)
all
meta=read.table("~/work_main/abt6_projects9/metagenomic_controlled/data/processed_reads/dc3000_infections/meta_corrected_per_plant.csv", sep=",", header=T, row.names = 1)
meta_pseud=melt(meta[c("Pseudomonas"),], value.name="load", variable.name="Genotype")
meta_pseud$day_ori=sapply(strsplit(as.character(meta_pseud$Genotype), "-"), `[`, 1)
meta_pseud$Genotype=sapply(strsplit(as.character(meta_pseud$Genotype), "_"), `[`,1)
meta_pseud$Day=sapply(strsplit(sapply(strsplit(meta_pseud$day_ori, "\\."), `[`, 1), "_R"), `[`,2)
meta_pseud$Replicate=sapply(strsplit(meta_pseud$day_ori, "\\."), `[`, 2)
meta_pseud$Replicate=gsub( "_","", meta_pseud$Replicate)
meta_pseud$Day=sapply(meta_pseud$Day, replace_rr)
all=merge(combined,meta_pseud)
ggplot(data=all, aes(x=log10(FINAL+.00001), y=log10(load))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
ggplot(data=all, aes(x=log10(ratioL+.00001), y=log10(load))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
ggplot(data=all, aes(x=log10(ratio+.00001), y=log10(load))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
all=all[all$ratio!="NA",]
all
ggplot(data=all, aes(x=log10(ratio+.00001), y=log10(load))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
dim(all)
which(all$load==0)
all[which(all$load==0),]
ggplot(data=all, aes(x=log10(FINAL+.00001), y=log10(load))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
keep
keep=all[all$FINAL!="NA" & all$ratio!="NA" & all$load!=0,]
keep
dim(keep)
which(keep=all[all$FINAL!="NA" & all$ratio!="NA" & all$load!=0,])
which(all[all$FINAL!="NA" & all$ratio!="NA" & all$load!=0,])
which(all[all$FINAL!="NA")
which(all[all$FINAL!="NA"])
which(all$FINAL!="NA")
which(all[which(all$FINAL!="NA"),]$ration!="NA")
which(all[which(all$FINAL!="NA"),]$ratio!="NA")
which(allwhich(all[which(all$FINAL!="NA"),]$ratio!="NA"),]$load!="NA")
which(all[which(all[which(all$FINAL!="NA"),]$ratio!="NA"),]$load!="NA")
all[which(all[which(all[which(all$FINAL!="NA"),]$ratio!="NA"),]$load!="NA"),]
dim(all[which(all[which(all[which(all$FINAL!="NA"),]$ratio!="NA"),]$load!="NA"),])
all
meta=read.table("~/work_main/abt6_projects9/metagenomic_controlled/data/processed_reads/dc3000_infections/meta_corrected_per_plant.csv", sep=",", header=T, row.names = 1)
meta_pseud=melt(meta[c("Pseudomonas"),], value.name="load", variable.name="Genotype")
meta_pseud$Genotype=sapply(strsplit(as.character(meta_pseud$Genotype), "_"), `[`,1)
meta_pseud$day_ori=sapply(strsplit(as.character(meta_pseud$Genotype), "-"), `[`, 1)
meta_pseud$Day=sapply(strsplit(sapply(strsplit(meta_pseud$day_ori, "\\."), `[`, 1), "_R"), `[`,2)
meta_pseud$Replicate=sapply(strsplit(meta_pseud$day_ori, "\\."), `[`, 2)
meta_pseud$Replicate=gsub( "_","", meta_pseud$Replicate)
meta_pseud$Day=sapply(meta_pseud$Day, replace_rr)
all=merge(combined,meta_pseud)
all
meta=read.table("~/work_main/abt6_projects9/metagenomic_controlled/data/processed_reads/dc3000_infections/meta_corrected_per_plant.csv", sep=",", header=T, row.names = 1)
meta_pseud=melt(meta[c("Pseudomonas"),], value.name="load", variable.name="Genotype")
meta_pseud$day_ori=sapply(strsplit(as.character(meta_pseud$Genotype), "-"), `[`, 1)
meta_pseud$Genotype=sapply(strsplit(as.character(meta_pseud$Genotype), "_"), `[`,1)
meta_pseud$Day=sapply(strsplit(sapply(strsplit(meta_pseud$day_ori, "\\."), `[`, 1), "_R"), `[`,2)
meta_pseud$Replicate=sapply(strsplit(meta_pseud$day_ori, "\\."), `[`, 2)
meta_pseud$Replicate=gsub( "_","", meta_pseud$Replicate)
meta_pseud$Day=sapply(meta_pseud$Day, replace_rr)
all=merge(combined,meta_pseud)
all
colony_count=read.table("~/Dropbox/controlled_metagenomics/infection_results/dc3000_colony_count.txt", sep="\t")
qPCR = read.table("~/Dropbox/controlled_metagenomics/qPCR/qPCR_delta.txt", sep="\t")
colnames(qPCR)[1:3]=c("Genotype", "Day", "Replicate")
qPCR=qPCR[, c("Day", "Replicate", "Genotype",  "ratio")]
colony_count$Genotype=gsub(" ", "",colony_count$Genotype)
combined = dplyr::full_join(colony_count, qPCR)
ggplot(data=combined, aes(x=log10(FINAL+.00001), y=log10(ratio))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
ggplot(data=combined, aes(x=log10(FINAL+.00001), y=log10(ratio+0.00001))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
ggplot(data=combined, aes(x=log10(FINAL+.00001), y=log10(load+0.00001))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
ggplot(data=combined, aes(x=log10(FINAL+.00001), y=log10(load+0.00001))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
ggplot(data=combined, aes(x=log10(FINAL+.00001), y=log10(ratio+0.00001))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
cor.test(x=log10(FINAL+.00001), y=log10(ratio+0.00001)
)
cor.test(x=log10(all$FINAL+.00001), y=log10(all$ratio+0.00001)
)
cor.test(x=log10(all$load+.00001), y=log10(all$ratio+0.00001))
cor.test(x=log10(all$load+.00001), y=log10(all$FINAL+0.00001))
cor.test(x=log10(all$load+.00001), y=log10(all$FINAL))
cor.test(x=log10(all$load+.00001), y=log10(all$FINAL+.000001))
dim(all)
all=all_all[which(all$ratio!="NA"),]
all_all=merge(combined,meta_pseud)
all=all_all[which(all$ratio!="NA"),]
ggplot(data=all, aes(x=log10(FINAL+.00001), y=log10(load))) +  geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
load_plot=all%>% group_by(Day, Genotype) %>% summarise(mean = mean((load), na.rm=T), se = sd((load), na.rm=T) / length(load))
cfu_plot=all%>% group_by(Day, Genotype) %>% summarise(mean = mean((FINAL), na.rm=T), se = sd(FINAL, na.rm=T) / length(FINAL))
qpcr_plot=all%>% group_by(Day, Genotype) %>% summarise(mean = mean((ratio), na.rm=T), se = sd(ratio, na.rm=T) / length(ratio))
df <- bind_rows(CFU=cfu_plot, qPCR=qpcr_plot, Metagenome=load_plot, .id="group")
ggplot(df, aes(x=Day, y=mean, group=Genotype, colour=Genotype))+geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1) +
geom_point()+theme_bw()+geom_line()+theme_bw()+
facet_wrap(~group , scales = "free_y", ncol=1, strip.position = "left" )             +
ylab(NULL) + theme(legend.position = "none") + scale_color_manual(values = wes_palette(n=3, name="GrandBudapest1"))
pdf("~/Dropbox/controlled_metagenomics/results_figures/tri_comparison.pdf")
ggplot(df, aes(x=Day, y=mean, group=Genotype, colour=Genotype))+geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1) +
geom_point()+theme_bw()+geom_line()+theme_bw()+
facet_wrap(~group , scales = "free_y", ncol=1, strip.position = "left" )             +
ylab(NULL) + theme(legend.position = "none") + scale_color_manual(values = wes_palette(n=3, name="GrandBudapest1"))
dev.off()
dim(all)
pdf("~/Dropbox/controlled_metagenomics/results_figures/cfu_vs_other.pdf", height=6, width=4)
plot1 <- ggplot(data=all, aes(x=log10(FINAL+0.001), y=log10(ratio)))+geom_point()  + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("ng bacteria"/"ng plant"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
plot2 <- ggplot(data=all, aes(x=log10(FINAL+0.001), y=log10(load)))+geom_point() + xlab(expression(log[10]~(cfu/mL))) + ylab(expression(log[10]~("DC3000 coverage"/"Plant coverage"))) + geom_smooth(method=lm, se = FALSE, col="Gray")
grid.arrange(plot1, plot2, ncol=1)
dev.off()
---
title: "qPCR_"
output: html_document
---
```{R}
library('reshape2')
library('dplyr')
library('tidyr')
library('ggplot2')
library('RColorBrewer')
library('reshape2')
library('outliers')
'%!in%' <- function(x,y)!('%in%'(x,y))
```
load data:
```{r}
# load data
qPCR_bact_ <-read.table("~/Dropbox/controlled_metagenomics/qPCR/16s_metagenomicload_bact._2018-06-21Quantification Cq Results.csv",header=T, sep=",")
qPCR_plant_ <- read.table("~/Dropbox/controlled_metagenomics/qPCR/16s_metagenomicload_plant_2018-07-20Quantification Cq Results.csv",header=T, sep=",")
```
all values together in one file
- delete NA
- remove samples with bad curves in the real-time PCR (line 50), e.g. very high CQ
```{r}
"put data frames together"
qPCR_all2 <- data.frame(qPCR_bact_, qPCR_plant_)
complete_ <- qPCR_all2[complete.cases(qPCR_all2), ]
str(complete_)
dele <- complete_
dele[dele==""] = NA
comp_dele <- dele[complete.cases(dele), ]
str(comp_dele)
comp_dele
tail(comp_dele)
qPCR_3 <- comp_dele
str(qPCR_3)
'%!in%' <- function(x,y)!('%in%'(x,y))
#delte bad from bacteria and plant run
new = comp_dele[comp_dele$Sample %!in% c("EV_RIV-2", "avrB_RIV-3", "avrB_RVI-1", "C_RII-2", "EV_RV-3", "C_RI-3", "C_RIII-1", "C_RIV-1", "C_RI-1", "EV_RI-2", "avrB_RII-3", "avrB_RII-6", "avrB_RV-6"),]
new
qPCR_3 <- new
```
- Stdev for all (bact target) Cq values (Cq)
- remove stdev (bact target) higher then 0.5
- remove samples (for more than one techn. rep) which had: no value, bad (flat) curve (bact target)
- Stdev for all (plant target) Cq values (Cq)
- remove stdev (plant target) higher then 0.5
- remove samples (for more then one techn. rep) which had: no value, bad (flat) curve (plant target)
- mean bact
- mean plant
```{r}
#mean and Stdev
qPCR_6<- melt(qPCR_3, id.vars = c("Well", "Sample"), measure.vars = "Cq")
qPCR_6$value = as.numeric(as.character(qPCR_6$value))
stdev6 <- dcast(qPCR_6, Sample ~ variable, sd , na.rm = TRUE)
stdev6[stdev6$is_ok==TRUE,]
stdev6$is_ok = stdev6$Cq < 10.5
keep6 <- stdev6[stdev6$is_ok==TRUE,]$Sample
length(keep6)
keep_not6 = stdev6[stdev6$is_ok==FALSE,]$Sample
length(keep_not6)
stdev6[stdev6$is_ok==TRUE,]
stdev6[stdev6$is_ok==FALSE,]
#remove with bad stdev:
rem6 <- stdev6[stdev6$is_ok==FALSE,]
rem6
new6 = qPCR_3[qPCR_3$Sample %!in% c("avrB_RVI-5", "C_RIII-2", "C_RIV-2", "C_RIV-3", "C_RVI-6", "EV_RII-2","EV_RII-4", "EV_RIII-2", "EV_RIV-1", "EV_RV-4"),]
new6
qPCR_4 <- new6
#proof
#st <- dcast(new6, Sample ~ variable, sd , na.rm = TRUE)
#st[st$is_ok==TRUE,]
#st$is_ok = st$Cq < .5
#ke <- st[st$is_ok==TRUE,]$Sample
#length(ke)
qPCR_7<- melt(qPCR_4, id.vars = c("Well", "Sample"), measure.vars = "Cq.1")
qPCR_7$value = as.numeric(as.character(qPCR_7$value))
stdev7 <- dcast(qPCR_7, Sample ~ variable, sd , na.rm = TRUE)
stdev7[stdev7$is_ok==TRUE,]
stdev7$is_ok = stdev7$Cq.1 < 10.5
keep7 <- stdev7[stdev7$is_ok==TRUE,]$Sample
length(keep7)
keep_not7 = stdev7[stdev6$is_ok==FALSE,]$Sample
length(keep_not7)
stdev7[stdev7$is_ok==TRUE,]
stdev7[stdev7$is_ok==FALSE,]
#remove with bad stdev:
rem7 <- stdev7[stdev7$is_ok==FALSE,]
rem7
new7 = qPCR_4[qPCR_4$Sample %!in% c("avrB_RII-1", "avrB_RIII-2", "C_RVI-2"),]
new7
qPCR_8 <- new7
qPCR_bac <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Cq")
qPCR_bac$value = as.numeric(as.character(qPCR_bac$value))
qPCR_mean_bac <- dcast(qPCR_bac, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_bac)
qPCR_mean_bac
qPCR_plan <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Cq.1")
qPCR_plan$value = as.numeric(as.character(qPCR_plan$value))
qPCR_mean_plan <- dcast(qPCR_plan, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_plan)
qPCR_mean_plan
```
- mean SQ. (bact target)
- mean SQ..1 (plant target)
- rename to days
```{r}
qPCR_bac_SQ <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Starting.Quantity..SQ.")
qPCR_bac_SQ$value = as.numeric(as.character(qPCR_bac_SQ$value))
qPCR_bac_SQ
qPCR_mean_bac_SQ <- dcast(qPCR_bac_SQ, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_bac_SQ)
qPCR_mean_bac_SQ
qPCR_plant_SQ <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Starting.Quantity..SQ..1")
qPCR_plant_SQ$value = as.numeric(as.character(qPCR_plant_SQ$value))
qPCR_plant_SQ
qPCR_mean_plant_SQ <- dcast(qPCR_plant_SQ, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_plant_SQ)
qPCR_mean_plant_SQ
qPCR_all_SQ <- data.frame(qPCR_mean_bac_SQ, qPCR_mean_plant_SQ)
qPCR_sep_SQ = separate(qPCR_all_SQ, Sample, into = c("treatment", "rep"), sep = "_")
qPCR_sep2_SQ = separate(qPCR_sep_SQ, rep, into = c("day", "biol.rep"), sep = "-")
qPCR_sep2_SQ
temp_ =qPCR_sep2_SQ$day
temp_[temp_=="RI"] = 0
temp_[temp_=="RII"] = 1
temp_[temp_=="RIII"] =2
temp_[temp_=="RIV"] = 3
temp_[temp_=="RV"] = 4
temp_[temp_=="RVI"] = 6
temp_
qPCR_sep2_SQ$day=temp_
qPCR_sep2_SQ
delta_qPCR_SQ <- qPCR_sep2_SQ
delta_qPCR_SQ$deltaSQ <- delta_qPCR_SQ$Starting.Quantity..SQ.- delta_qPCR_SQ$Starting.Quantity..SQ..1
delta_qPCR_SQ$deltaSQ = as.numeric(as.character(delta_qPCR_SQ$deltaSQ))
delta_qPCR_SQ_plot = delta_qPCR_SQ%>% group_by(day, treatment) %>% summarise(mean = mean(deltaSQ, na.rm=T), se = sd(deltaSQ, na.rm=T) / length(deltaSQ))
delta_qPCR_SQ_keep=delta_qPCR_SQ_plot[delta_qPCR_SQ_plot$treatment=="avrB" | delta_qPCR_SQ_plot$treatment=="EV" | delta_qPCR_SQ_plot$treatment=="C",]
ggplot(delta_qPCR_SQ_keep, aes(day, mean, group=treatment, colour=treatment), width=.1)+geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1)+geom_point()+theme_bw()+geom_line()+theme_bw()+ylab("deltaSQ") + scale_colour_brewer(palette = "Set1")
```
Now let's graph 2^deltacq
```{r}
delta_qPCR_SQ$ratio=delta_qPCR_SQ$Starting.Quantity..SQ./delta_qPCR_SQ$Starting.Quantity..SQ..1
delta_qPCR_SQ_plot = delta_qPCR_SQ%>% group_by(day, treatment) %>% summarise(mean = mean(ratio, na.rm=T), se = sd(ratio, na.rm=T) / length(deltaSQ))
two_delta_qPCR_SQ_keep=two_delta_qPCR_SQ_plot[two_delta_qPCR_SQ_plot$treatment=="avrB" | two_delta_qPCR_SQ_plot$treatment=="EV" | delta_qPCR_SQ_plot$treatment=="C",]
ggplot(delta_qPCR_SQ_plot, aes(day, mean, group=treatment, colour=treatment), width=.1)+geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1)+geom_point()+theme_bw()+geom_line()+theme_bw()+ylab("(mass DC3000/mass Plant)") + xlab("Days post infection") + scale_colour_brewer(palette = "Set1")
#write.table(two_delta_qPCR_SQ_keep,"~/Dropbox/controlled_metagenomics/qPCR/qPCR_two_delta.txt", sep="\t", quote = F)
write.table(delta_qPCR_SQ,"~/Dropbox/controlled_metagenomics/qPCR/qPCR_delta.txt", sep="\t", quote = F)
```
delta_qPCR_SQ
library('reshape2')
library('dplyr')
library('tidyr')
library('ggplot2')
library('RColorBrewer')
library('reshape2')
library('outliers')
'%!in%' <- function(x,y)!('%in%'(x,y))
qPCR_bact_ <-read.table("~/Dropbox/controlled_metagenomics/qPCR/16s_metagenomicload_bact._2018-06-21Quantification Cq Results.csv",header=T, sep=",")
qPCR_plant_ <- read.table("~/Dropbox/controlled_metagenomics/qPCR/16s_metagenomicload_plant_2018-07-20Quantification Cq Results.csv",header=T, sep=",")
qPCR_all2 <- data.frame(qPCR_bact_, qPCR_plant_)
complete_ <- qPCR_all2[complete.cases(qPCR_all2), ]
str(complete_)
dele <- complete_
dele[dele==""] = NA
comp_dele <- dele[complete.cases(dele), ]
str(comp_dele)
comp_dele
tail(comp_dele)
qPCR_3 <- comp_dele
str(qPCR_3)
'%!in%' <- function(x,y)!('%in%'(x,y))
new = comp_dele[comp_dele$Sample %!in% c("EV_RIV-2", "avrB_RIV-3", "avrB_RVI-1", "C_RII-2", "EV_RV-3", "C_RI-3", "C_RIII-1", "C_RIV-1", "C_RI-1", "EV_RI-2", "avrB_RII-3", "avrB_RII-6", "avrB_RV-6"),]
new
qPCR_3 <- new
qPCR_all2 <- data.frame(qPCR_bact_, qPCR_plant_)
complete_ <- qPCR_all2[complete.cases(qPCR_all2), ]
str(complete_)
dele <- complete_
dele[dele==""] = NA
comp_dele <- dele[complete.cases(dele), ]
str(comp_dele)
comp_dele
tail(comp_dele)
qPCR_3 <- comp_dele
str(qPCR_3)
'%!in%' <- function(x,y)!('%in%'(x,y))
new = comp_dele[comp_dele$Sample %!in% c("EV_RIV-2", "avrB_RIV-3", "avrB_RVI-1", "C_RII-2", "EV_RV-3", "C_RI-3", "C_RIII-1", "C_RIV-1", "C_RI-1", "EV_RI-2", "avrB_RII-3", "avrB_RII-6", "avrB_RV-6"),]
new
qPCR_3 <- new
qPCR_all2 <- data.frame(qPCR_bact_, qPCR_plant_)
complete_ <- qPCR_all2[complete.cases(qPCR_all2), ]
str(complete_)
dele <- complete_
dele[dele==""] = NA
comp_dele <- dele[complete.cases(dele), ]
str(comp_dele)
comp_dele
qPCR_3 <- comp_dele
str(qPCR_3)
'%!in%' <- function(x,y)!('%in%'(x,y))
new = comp_dele[comp_dele$Sample %!in% c("EV_RIV-2", "avrB_RIV-3", "avrB_RVI-1", "C_RII-2", "EV_RV-3", "C_RI-3", "C_RIII-1", "C_RIV-1", "C_RI-1", "EV_RI-2", "avrB_RII-3", "avrB_RII-6", "avrB_RV-6"),]
new
qPCR_3 <- new
qPCR_6<- melt(qPCR_3, id.vars = c("Well", "Sample"), measure.vars = "Cq")
qPCR_6$value = as.numeric(as.character(qPCR_6$value))
stdev6 <- dcast(qPCR_6, Sample ~ variable, sd , na.rm = TRUE)
stdev6[stdev6$is_ok==TRUE,]
stdev6$is_ok = stdev6$Cq < 1.5
keep6 <- stdev6[stdev6$is_ok==TRUE,]$Sample
length(keep6)
keep_not6 = stdev6[stdev6$is_ok==FALSE,]$Sample
length(keep_not6)
stdev6[stdev6$is_ok==TRUE,]
stdev6[stdev6$is_ok==FALSE,]
rem6 <- stdev6[stdev6$is_ok==FALSE,]
rem6
new6 = qPCR_3[qPCR_3$Sample %!in% c("avrB_RVI-5", "C_RIII-2", "C_RIV-2", "C_RIV-3", "C_RVI-6", "EV_RII-2","EV_RII-4", "EV_RIII-2", "EV_RIV-1", "EV_RV-4"),]
new6
qPCR_4 <- new6
qPCR_7<- melt(qPCR_4, id.vars = c("Well", "Sample"), measure.vars = "Cq.1")
qPCR_7$value = as.numeric(as.character(qPCR_7$value))
stdev7 <- dcast(qPCR_7, Sample ~ variable, sd , na.rm = TRUE)
stdev7[stdev7$is_ok==TRUE,]
stdev7$is_ok = stdev7$Cq.1 < 1.5
keep7 <- stdev7[stdev7$is_ok==TRUE,]$Sample
length(keep7)
keep_not7 = stdev7[stdev6$is_ok==FALSE,]$Sample
length(keep_not7)
stdev7[stdev7$is_ok==TRUE,]
stdev7[stdev7$is_ok==FALSE,]
rem7 <- stdev7[stdev7$is_ok==FALSE,]
rem7
new7 = qPCR_4[qPCR_4$Sample %!in% c("avrB_RII-1", "avrB_RIII-2", "C_RVI-2"),]
new7
qPCR_8 <- new7
qPCR_bac <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Cq")
qPCR_bac$value = as.numeric(as.character(qPCR_bac$value))
qPCR_mean_bac <- dcast(qPCR_bac, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_bac)
qPCR_mean_bac
qPCR_plan <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Cq.1")
qPCR_plan$value = as.numeric(as.character(qPCR_plan$value))
qPCR_mean_plan <- dcast(qPCR_plan, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_plan)
qPCR_mean_plan
qPCR_bac_SQ <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Starting.Quantity..SQ.")
qPCR_bac_SQ$value = as.numeric(as.character(qPCR_bac_SQ$value))
qPCR_bac_SQ
qPCR_mean_bac_SQ <- dcast(qPCR_bac_SQ, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_bac_SQ)
qPCR_mean_bac_SQ
qPCR_plant_SQ <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Starting.Quantity..SQ..1")
qPCR_plant_SQ$value = as.numeric(as.character(qPCR_plant_SQ$value))
qPCR_plant_SQ
qPCR_mean_plant_SQ <- dcast(qPCR_plant_SQ, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_plant_SQ)
qPCR_mean_plant_SQ
qPCR_all_SQ <- data.frame(qPCR_mean_bac_SQ, qPCR_mean_plant_SQ)
qPCR_sep_SQ = separate(qPCR_all_SQ, Sample, into = c("treatment", "rep"), sep = "_")
qPCR_sep2_SQ = separate(qPCR_sep_SQ, rep, into = c("day", "biol.rep"), sep = "-")
qPCR_sep2_SQ
temp_ =qPCR_sep2_SQ$day
temp_[temp_=="RI"] = 0
temp_[temp_=="RII"] = 1
temp_[temp_=="RIII"] =2
temp_[temp_=="RIV"] = 3
temp_[temp_=="RV"] = 4
temp_[temp_=="RVI"] = 6
temp_
qPCR_sep2_SQ$day=temp_
qPCR_sep2_SQ
delta_qPCR_SQ <- qPCR_sep2_SQ
delta_qPCR_SQ$deltaSQ <- delta_qPCR_SQ$Starting.Quantity..SQ.- delta_qPCR_SQ$Starting.Quantity..SQ..1
delta_qPCR_SQ$deltaSQ = as.numeric(as.character(delta_qPCR_SQ$deltaSQ))
delta_qPCR_SQ_plot = delta_qPCR_SQ%>% group_by(day, treatment) %>% summarise(mean = mean(deltaSQ, na.rm=T), se = sd(deltaSQ, na.rm=T) / length(deltaSQ))
delta_qPCR_SQ_keep=delta_qPCR_SQ_plot[delta_qPCR_SQ_plot$treatment=="avrB" | delta_qPCR_SQ_plot$treatment=="EV" | delta_qPCR_SQ_plot$treatment=="C",]
ggplot(delta_qPCR_SQ_keep, aes(day, mean, group=treatment, colour=treatment), width=.1)+geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1)+geom_point()+theme_bw()+geom_line()+theme_bw()+ylab("deltaSQ") + scale_colour_brewer(palette = "Set1")
delta_qPCR_SQ$ratio=delta_qPCR_SQ$Starting.Quantity..SQ./delta_qPCR_SQ$Starting.Quantity..SQ..1
delta_qPCR_SQ_plot = delta_qPCR_SQ%>% group_by(day, treatment) %>% summarise(mean = mean(ratio, na.rm=T), se = sd(ratio, na.rm=T) / length(deltaSQ))
two_delta_qPCR_SQ_keep=two_delta_qPCR_SQ_plot[two_delta_qPCR_SQ_plot$treatment=="avrB" | two_delta_qPCR_SQ_plot$treatment=="EV" | delta_qPCR_SQ_plot$treatment=="C",]
ggplot(delta_qPCR_SQ_plot, aes(day, mean, group=treatment, colour=treatment), width=.1)+geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1)+geom_point()+theme_bw()+geom_line()+theme_bw()+ylab("(mass DC3000/mass Plant)") + xlab("Days post infection") + scale_colour_brewer(palette = "Set1")
ggplot(delta_qPCR_SQ_plot, aes(day, mean, group=treatment, colour=treatment), width=.1)+geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1)+geom_point()+theme_bw()+geom_line()+theme_bw()+ylab("(mass DC3000/mass Plant)") + xlab("Days post infection") + scale_colour_brewer(palette = "Set1")
write.table(delta_qPCR_SQ,"~/Dropbox/controlled_metagenomics/qPCR/qPCR_delta.txt", sep="\t", quote = F)
stdev6$Cq
stdev6
dim(qPCR_6)
qPCR_6<- melt(qPCR_3, id.vars = c("Well", "Sample"), measure.vars = "Cq")
dim(qPCR_6)
head(qPCR_6)
qPCR_6$value = as.numeric(as.character(qPCR_6$value))
head(qPCR_6)
stdev6 <- dcast(qPCR_6, Sample ~ variable, sd , na.rm = TRUE)
head(qPCR_6)
stdev6[stdev6$is_ok==TRUE,]
stdev6 <- dcast(qPCR_6, Sample ~ variable, sd , na.rm = TRUE)
stdev6
stdev6$is_ok = stdev6$Cq < 4
keep6 <- stdev6[stdev6$is_ok==TRUE,]$Sample
length(keep6)
keep_not6 = stdev6[stdev6$is_ok==FALSE,]$Sample
length(keep_not6)
stdev6[stdev6$is_ok==TRUE,]
stdev6[stdev6$is_ok==FALSE,]
dim(stdev6)
rem6 <- stdev6[stdev6$is_ok==FALSE,]
rem6
new6 = qPCR_3[qPCR_3$Sample %!in% c("avrB_RVI-5", "C_RIII-2", "C_RIV-2", "C_RIV-3", "C_RVI-6", "EV_RII-2","EV_RII-4", "EV_RIII-2", "EV_RIV-1", "EV_RV-4"),]
new6
qPCR_4 <- new6
qPCR_7<- melt(qPCR_4, id.vars = c("Well", "Sample"), measure.vars = "Cq.1")
qPCR_7$value = as.numeric(as.character(qPCR_7$value))
stdev7 <- dcast(qPCR_7, Sample ~ variable, sd , na.rm = TRUE)
stdev7[stdev7$is_ok==TRUE,]
stdev7$is_ok = stdev7$Cq.1 < 4
keep7 <- stdev7[stdev7$is_ok==TRUE,]$Sample
length(keep7)
keep_not7 = stdev7[stdev6$is_ok==FALSE,]$Sample
length(keep_not7)
stdev7[stdev7$is_ok==TRUE,]
stdev7[stdev7$is_ok==FALSE,]
rem7 <- stdev7[stdev7$is_ok==FALSE,]
rem7
new7 = qPCR_4[qPCR_4$Sample %!in% c("avrB_RII-1", "avrB_RIII-2", "C_RVI-2"),]
new7
qPCR_8 <- new7
qPCR_bac <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Cq")
qPCR_bac$value = as.numeric(as.character(qPCR_bac$value))
qPCR_mean_bac <- dcast(qPCR_bac, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_bac)
qPCR_mean_bac
qPCR_plan <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Cq.1")
qPCR_plan$value = as.numeric(as.character(qPCR_plan$value))
qPCR_mean_plan <- dcast(qPCR_plan, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_plan)
qPCR_mean_plan
qPCR_bac_SQ <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Starting.Quantity..SQ.")
qPCR_bac_SQ$value = as.numeric(as.character(qPCR_bac_SQ$value))
qPCR_bac_SQ
qPCR_mean_bac_SQ <- dcast(qPCR_bac_SQ, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_bac_SQ)
qPCR_mean_bac_SQ
qPCR_plant_SQ <- melt(qPCR_8, id.vars = c("Well", "Sample"), measure.vars = "Starting.Quantity..SQ..1")
qPCR_plant_SQ$value = as.numeric(as.character(qPCR_plant_SQ$value))
qPCR_plant_SQ
qPCR_mean_plant_SQ <- dcast(qPCR_plant_SQ, Sample ~ variable,  mean, na.rm = TRUE)
str(qPCR_mean_plant_SQ)
qPCR_mean_plant_SQ
qPCR_all_SQ <- data.frame(qPCR_mean_bac_SQ, qPCR_mean_plant_SQ)
qPCR_sep_SQ = separate(qPCR_all_SQ, Sample, into = c("treatment", "rep"), sep = "_")
qPCR_sep2_SQ = separate(qPCR_sep_SQ, rep, into = c("day", "biol.rep"), sep = "-")
qPCR_sep2_SQ
temp_ =qPCR_sep2_SQ$day
temp_[temp_=="RI"] = 0
temp_[temp_=="RII"] = 1
temp_[temp_=="RIII"] =2
temp_[temp_=="RIV"] = 3
temp_[temp_=="RV"] = 4
temp_[temp_=="RVI"] = 6
temp_
qPCR_sep2_SQ$day=temp_
qPCR_sep2_SQ
delta_qPCR_SQ <- qPCR_sep2_SQ
delta_qPCR_SQ$deltaSQ <- delta_qPCR_SQ$Starting.Quantity..SQ.- delta_qPCR_SQ$Starting.Quantity..SQ..1
delta_qPCR_SQ$deltaSQ = as.numeric(as.character(delta_qPCR_SQ$deltaSQ))
delta_qPCR_SQ_plot = delta_qPCR_SQ%>% group_by(day, treatment) %>% summarise(mean = mean(deltaSQ, na.rm=T), se = sd(deltaSQ, na.rm=T) / length(deltaSQ))
delta_qPCR_SQ_keep=delta_qPCR_SQ_plot[delta_qPCR_SQ_plot$treatment=="avrB" | delta_qPCR_SQ_plot$treatment=="EV" | delta_qPCR_SQ_plot$treatment=="C",]
ggplot(delta_qPCR_SQ_keep, aes(day, mean, group=treatment, colour=treatment), width=.1)+geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1)+geom_point()+theme_bw()+geom_line()+theme_bw()+ylab("deltaSQ") + scale_colour_brewer(palette = "Set1")
dim(delta_qPCR_SQ_keep)
delta_qPCR_SQ$ratio=delta_qPCR_SQ$Starting.Quantity..SQ./delta_qPCR_SQ$Starting.Quantity..SQ..1
delta_qPCR_SQ_plot = delta_qPCR_SQ%>% group_by(day, treatment) %>% summarise(mean = mean(ratio, na.rm=T), se = sd(ratio, na.rm=T) / length(deltaSQ))
two_delta_qPCR_SQ_keep=two_delta_qPCR_SQ_plot[two_delta_qPCR_SQ_plot$treatment=="avrB" | two_delta_qPCR_SQ_plot$treatment=="EV" | delta_qPCR_SQ_plot$treatment=="C",]
ggplot(delta_qPCR_SQ_plot, aes(day, mean, group=treatment, colour=treatment), width=.1)+geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1)+geom_point()+theme_bw()+geom_line()+theme_bw()+ylab("(mass DC3000/mass Plant)") + xlab("Days post infection") + scale_colour_brewer(palette = "Set1")
write.table(delta_qPCR_SQ,"~/Dropbox/controlled_metagenomics/qPCR/qPCR_delta.txt", sep="\t", quote = F)
dim(delta_qPCR_SQ)
dim(two_delta_qPCR_SQ_keep)
dimqPCR_sep2_SQ(qPCR_sep2_SQ)
dim(qPCR_sep2_SQ)
dim(qPCR_8)
dim(new7)
dim(keep7)
keep7
dim(stdev7)
dim(stdev6)
dim(qPCR_all2)
dim(stdev6)
dim(qPCR_6)
6*5*3
dim(stdev6)
stdev6
dim(qPCR_all2)
dim(new)
stdev6
