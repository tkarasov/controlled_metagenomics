plate_num = ceiling(length(all_strain) / 24)
#Divide all_strain into each plate
plates = list()
for( i in 1:plate_num ){
curr_samples = all_strain[(i*24-23):(i*24)]
curr_mat = matrix(curr_samples, nrow = 4, ncol = 6)
colnames(curr_mat) = c(1:6)
rownames(curr_mat) = c("A", "B", "C", "D")
nam = paste("curr_mat_", i, sep = "")
my_grob = tableGrob(curr_mat)
my_grob$widths = unit(rep(1/ncol(my_grob), ncol(my_grob)), "npc")
my_fin = arrangeGrob(my_grob, top = paste("Plate", i))
assign(nam, my_fin)
write(paste("Plate", i), "~/Dropbox/Pseudomonas_trait_mapping/experiments/13_9_2019_pixel_JZ.csv", append = TRUE)
write.table(curr_mat, "~/Dropbox/Pseudomonas_trait_mapping/experiments/13_9_2019_pixel_JZ.csv", append = TRUE, sep = ",", quote = FALSE)
}
bad=read.table("~/Desktop/bad.txt")
bad
good=read.table("~/Desktop/good.txt")
head(bad)
bad=read.table("~/Desktop/bad.txt", header=T)
good=read.table("~/Desktop/good.txt", header=T)
?gsub
for(line in bad){
correct=gsub(line[1], good$Index)
print(correct)
}
line
bad[1,]
for(i in nrows(bad)){
correct=gsub(bad[i,2], good$Index)
print(correct)
}
nrow(bad)
for(i in nrow(bad)){
correct=gsub(bad[i,2], good$Index)
print(correct)
}
bad[i,2]
correct=gsub(bad[i,2], x=good$Index)
correct=sub(bad[i,2], x=good$Index)
correct=grep(bad[i,2], x=good$Index)
correct
i
for(i in nrow(bad)){
correct=grep(bad[i,2], x=good$Index)
print(correct)
}
for(i in 1:nrow(bad)){
correct=grep(bad[i,2], x=good$Index)
print(correct)
}
good$old_position=NA
for(i in 1:nrow(bad)){
correct=grep(bad[i,2], x=good$Index)
good$old_position[i]=bad[i,1]
}
good
bad[1,]
i
bad[i,1]
good$old_position=""
for(i in 1:nrow(bad)){
correct=grep(bad[i,2], x=good$Index)
good$old_position[i]=bad[i,1]
}
good
bad[i,1]
as.character(bad[i,1])
for(i in 1:nrow(bad)){
correct=grep(bad[i,2], x=good$Index)
good$old_position[i]=as.character(bad[i,1])
}
good
bad=read.table("~/Desktop/bad.txt", header=T)
good=read.table("~/Desktop/good.txt", header=T)
good$old_position=""
for(i in 1:nrow(bad)){
correct=grep(bad[i,2], x=good$Index)
good$old_position[i]=as.character(bad[i,1])
}
good
bad
i=72
grep(bad[i,2], x=good$Index)
for(i in 1:nrow(bad)){
correct=grep(bad[i,2], x=good$Index)
good$old_position[correct]=as.character(bad[i,1])
}
good
bad=read.table("~/Desktop/bad.txt", header=T)
good=read.table("~/Desktop/good.txt", header=T)
good$old_position=""
for(i in 1:nrow(bad)){
correct=grep(bad[i,2], x=good$Index)
good$old_position[correct]=as.character(bad[i,1])
}
good
write.table("~/Dropbox/pathodopsis/sequencing_runs/mapping_good_sample_bad_sample.txt")
write.table("~/Dropbox/pathodopsis/sequencing_runs/mapping_good_sample_bad_sample.txt", sep="\t", quotes=F, header=T)
write.table("~/Dropbox/pathodopsis/sequencing_runs/mapping_good_sample_bad_sample.txt", sep="\t", quote=F, header=T)
write.table("~/Dropbox/pathodopsis/sequencing_runs/mapping_good_sample_bad_sample.txt", sep="\t", quote=F, col.names = T, row.names = F)
write.table(good, "~/Dropbox/pathodopsis/sequencing_runs/mapping_good_sample_bad_sample.txt", sep="\t", quote=F, col.names = T, row.names = F)
info=read.table("~/work_main/abt6_projects9/pathodopsis_microbiomes/data/processed_reads/16S/16S_12_2018/16S_plate_locations.csv", header = T)
head(info)
head(good)
bad=read.table("~/Desktop/bad.txt", header=T)
good=read.table("~/Desktop/good.txt", header=T)
good$old_position=""
for(i in 1:nrow(bad)){
correct=grep(bad[i,2], x=good$Index)
good$old_position[correct]=as.character(bad[i,1])
}
write.table(good, "~/Dropbox/pathodopsis/sequencing_runs/mapping_good_sample_bad_sample.txt", sep="\t", quote=F, col.names = T, row.names = F)
info=read.table("~/work_main/abt6_projects9/pathodopsis_microbiomes/data/processed_reads/16S/16S_12_2018/16S_plate_locations.csv", header = T)
head(good)
head(info)
info = merge(info, good, by.x=Sample_Plate, by.y=old_position)
info$Sample_Plate
info = merge(info, good, by.x="Sample_Plate", by.y=old_position)
info = merge(info, good, by.x="Sample_Plate", by.y="old_position")
head(nfo)
head(info)
info
info=info[,c("Sample_ID", "Sample_Name", "Actual_Position", "Sample_Well", "Index", "Sample_Plate")]
head(info)
dim(info)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t")
head(info)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
head(nfo)
head(info)
info[1,]
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
head(info)
head(good)
info = merge(info, good, by.x="Sample_Well", by.y="old_position")
head(info)
head(good)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
info = merge(info, good, by.x="Sample_Well", by.y="old_position")
head(info)
info = merge(info, good, by.x="Sample_Well", by.y="old_position", all =T)
head(info)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
info = merge(info, good, by.x="Sample_Well", by.y="old_position", all =T)
head(info)
head(good)
head(info, n=20)
head(good)
info = merge(info, good, by.x="Sample_Well", by.y="Actual_position", all =T)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
info = merge(info, good, by.x="Sample_Well", by.y="Actual_position", all =T)
head(good)
info = merge(info, good, by.x="Sample_Well", by.y="Actual_Position", all =T)
head(info)
head(info, n=20)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
head(good)
info = merge(info, good, by.x="Sample_Well", by.y="Actual_Position", all =T)
head(info)
which(info$Index_real!=info$Index)
length(which(info$Index_real!=info$Index))
head(good)
head(info)
good
good[10,]
info[10,]
info[info$Sample_Well=="B2",]
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
head(info)
head(good)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
info = merge(info, good, by.x="Sample_Well", by.y="Actual_Position", all =T)
head(info)
head(info, n=20)
info=merge(info,info1)
info1=read.table("~/work_main/abt6_projects9/pathodopsis_microbiomes/data/processed_reads/16S/16S_12_2018/16S_plate_locations.csv", header = T)
info=merge(info,info1)
head(info)
head(info1)
info1=read.table("~/work_main/abt6_projects9/pathodopsis_microbiomes/data/processed_reads/16S/16S_12_2018/16S_plate_locations.csv", header = T)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
info = merge(info, good, by.x="Sample_Well", by.y="Actual_Position", all =T)
info=merge(info,info1, by.x="Sample_ID", by.y="Sample_ID")
head(info)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
info1=read.table("~/work_main/abt6_projects9/pathodopsis_microbiomes/data/processed_reads/16S/16S_12_2018/16S_plate_locations.csv", header = T)
head(info1)
head(info)
plate_barcode_map=info1[,"Sample_Plate", "sec_barcode"]
plate_barcode_map=info1[,c("Sample_Plate", "sec_barcode")]
plate_barcode_map
plate_barcode_map=unique(info1[,c("Sample_Plate", "sec_barcode")])
plate_barcode_map
head(info)
plate_barcode_map[,plate_barcode_map$Sample_Plate==info$Sample_Plate]
plate_barcode_map$Sample_Plate==info$Sample_Plate
plate_barcode_map$Sample_Plate
info$Sample_Plate
class(plate_barcode_map)
class(plate_barcode_map$Sample_Plate)
class(info$Sample_Plate)
plate_barcode_map$Sample_Plate==info$Sample_Plate
which(plate_barcode_map$Sample_Plate==info$Sample_Plate)
which(info[1,]$Sample_Plate==plate_barcode_map[1,1])
which(info[1,]$Sample_Plate==plate_barcode_map[10,1])
which(info[1,]$Sample_Plate==plate_barcode_map[4,1])
which(info$Sample_Plate==plate_barcode_map[4,1])
which(info$Sample_Plate==plate_barcode_map[1,1])
which(info$Sample_Plate==plate_barcode_map[1,2])
plate_barcode_map
plate_barcode_map$Sample_Plate
info$Sample_Plate
levels(info$Sample_Plate)
levels(plate_barcode_map$Sample_Plate)
plate_barcode_map$Sample_Plate=as.character(plate_barcode_map$Sample_Plate)
which(plate_barcode_map$Sample_Plate==info$Sample_Plate)
dim(info)
info$Sample_Plate
which(plate_barcode_map$Sample_Plate==info$Sample_Plate)
info[,which(plate_barcode_map$Sample_Plate==info$Sample_Plate)]
head(plate_barcode_map)
info$sec_barcode=NA
for(i in nrow(info)){
info$sec_barcod[i]=plate_barcode_map[which(plate_barcode_map$Sample_Plate)==info$Sample_Plate,2]
}
info$sec_barcode=""
for(i in nrow(info)){
info$sec_barcod[i]=plate_barcode_map[which(plate_barcode_map$Sample_Plate)==info$Sample_Plate[i],2]
}
which(plate_barcode_map$Sample_Plate)==info$Sample_Plate[i]
info$sec_barcod[i]=plate_barcode_map[which(plate_barcode_map$Sample_Plate)=info$Sample_Plate[i],2]
for(i in nrow(info)){
info$sec_barcod[i]=plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2]
}
which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i])
info$Sample_Plate[i]
info$sec_barcode=""
for(i in nrow(info)){
temp=plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2]
if(length(temp)==0){
info$sec_barcod[i]="NA"
}
else{
info$sec_barcod[i]=temp
}
}
info$sec_barcod
dim(info)
temp
i
i=10
temp=plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2]
temp
info$sec_barcode=""
for(i in nrow(info)){
temp=plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2]
if(length(temp)==0){
info$sec_barcod[i]="NA"
}
else{
print(i)
info$sec_barcod[i]=temp
}
}
info$sec_barcode=""
for(i in 1:nrow(info)){
temp=plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2]
if(length(temp)==0){
info$sec_barcod[i]="NA"
}
else{
print(i)
info$sec_barcod[i]=temp
}
}
info$sec_barcod
temp
info$sec_barcode=""
for(i in 1:nrow(info)){
temp=plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2]
print(temp)
if(length(temp)==0){
info$sec_barcod[i]="NA"
}
else{
info$sec_barcod[i]=temp
}
}
info$sec_barcode=""
for(i in 1:nrow(info)){
temp=as.character(plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2])
print(temp)
if(length(temp)==0){
info$sec_barcod[i]="NA"
}
else{
info$sec_barcod[i]=temp
}
}
info$sec_barcod
head(info)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
info = merge(info, good, by.x="Sample_Well", by.y="Actual_Position", all =T)
head(info)
info$sec_barcode=""
for(i in 1:nrow(info)){
temp=as.character(plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2])
print(temp)
if(length(temp)==0){
info$sec_barcod[i]="NA"
}
else{
info$sec_barcod[i]=temp
}
}
head(info)
info=info[,c("Sample_ID", "Sample_Plate", "Sample_Well", "sec_barcode", "Index", "old_position")]
head(info)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
info = merge(info, good, by.x="Sample_Well", by.y="Actual_Position", all =T)
info$sec_barcode=""
for(i in 1:nrow(info)){
temp=as.character(plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2])
print(temp)
if(length(temp)==0){
info$sec_barcode[i]="NA"
}
else{
info$sec_barcode[i]=temp
}
}
info=info[,c("Sample_ID", "Sample_Plate", "Sample_Well", "sec_barcode", "Index", "old_position")]
head(info)
info=info[,c("Sample_ID", "Sample_Plate", "Sample_Well",  "old_position", "sec_barcode", "Index")]
head(info)
info=read.table("~/Dropbox/pathodopsis/sequencing_runs/Pathodopsis2018_Metagenome_16S_9_2019_for_demult.txt", sep="\t",header=T)
info = merge(info, good, by.x="Sample_Well", by.y="Actual_Position", all =T)
info$sec_barcode=""
for(i in 1:nrow(info)){
temp=as.character(plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2])
print(temp)
if(length(temp)==0){
if(info$sec_barcode[i]=="plate9")
info$sec_barcode[i]="341F5.806F1"
if(info$sec_barcode[i]=="8 single")
info$sec_barcode[i]="341F2.806F4"
if(info$sec_barcode[i]=="single6")
info$sec_barcode[i]="341F4.806F2"
else
info$sec_barcode[i]="NA"
}
else{
info$sec_barcode[i]=temp
}
}
info$sec_barcode
info[info$sec_barcode=="NA",]
i=2
temp=as.character(plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2])
temp
info$sec_barcode[i]
info$sec_barcode=""
for(i in 1:nrow(info)){
temp=as.character(plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2])
print(temp)
if(length(temp)==0){
if(info$Sample_Plate[i]=="plate9")
info$sec_barcode[i]="341F5.806F1"
if(info$Sample_Plate[i]=="8 single")
info$sec_barcode[i]="341F2.806F4"
if(info$Sample_Plate[i]=="single6")
info$sec_barcode[i]="341F4.806F2"
else
info$sec_barcode[i]="NA"
}
else{
info$sec_barcode[i]=temp
}
}
info[info$sec_barcode=="NA",]
i=2
temp=as.character(plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2])
temp
info$Sample_Plate[i]=="plate9"
info$Sample_Plate[i]
info$Sample_Plate[i]=="8 single"
info$Sample_Plate[i]=="8 single"
info$sec_barcode=""
for(i in 1:nrow(info)){
temp=as.character(plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2])
print(temp)
if(length(temp)==0){
if(info$Sample_Plate[i]=="plate9")
info$sec_barcode[i]="341F5.806F1"
print(1)
if(info$Sample_Plate[i]=="8 single")
info$sec_barcode[i]="341F2.806F4"
if(info$Sample_Plate[i]=="single6")
info$sec_barcode[i]="341F4.806F2"
else
info$sec_barcode[i]="NA"
}
else{
info$sec_barcode[i]=temp
}
}
info$sec_barcode[2]
i=2
if(info$Sample_Plate[i]=="plate9")
info$sec_barcode[i]="341F5.806F1"
print(1)
info$sec_barcode=""
for(i in 1:nrow(info)){
temp=as.character(plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2])
print(temp)
if(length(temp)==0){
if(info$Sample_Plate[i]=="plate9"){
info$sec_barcode[i]="341F5.806F1"
print(1)}
if(info$Sample_Plate[i]=="8 single"){
info$sec_barcode[i]="341F2.806F4"}
if(info$Sample_Plate[i]=="single6"){
info$sec_barcode[i]="341F4.806F2"}
else{
info$sec_barcode[i]="NA"}
}
else{
info$sec_barcode[i]=temp
}
}
info$sec_barcode
i
i=2
if(info$Sample_Plate[i]=="8 single"){
print("yes")
info$sec_barcode[i]="341F2.806F4"}
info$sec_barcode[i]
i
info$sec_barcode=""
for(i in 1:nrow(info)){
temp=as.character(plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2])
print(temp)
if(length(temp)==0){
if(info$Sample_Plate[i]=="plate9"){
info$sec_barcode[i]="341F5.806F1"
print(1)}
if(info$Sample_Plate[i]=="8 single"){
print("yes")
info$sec_barcode[i]="341F2.806F4"}
if(info$Sample_Plate[i]=="single6"){
info$sec_barcode[i]="341F4.806F2"}
}
else{
info$sec_barcode[i]=temp
}
}
info$sec_barcode
info$sec_barcode="NA"
for(i in 1:nrow(info)){
temp=as.character(plate_barcode_map[which(plate_barcode_map$Sample_Plate==info$Sample_Plate[i]),2])
print(temp)
if(length(temp)==0){
if(info$Sample_Plate[i]=="plate9"){
info$sec_barcode[i]="341F5.806F1"
print(1)}
if(info$Sample_Plate[i]=="8 single"){
print("yes")
info$sec_barcode[i]="341F2.806F4"}
if(info$Sample_Plate[i]=="single6"){
info$sec_barcode[i]="341F4.806F2"}
}
else{
info$sec_barcode[i]=temp
}
}
info$sec_barcode
info$sec_barcode[2]
info=info[,c("Sample_ID", "Sample_Plate", "Sample_Well",  "old_position", "sec_barcode", "Index")]
write.table(info, "~/work_main/abt6_projects9/pathodopsis_microbiomes/data/processed_reads/16S/16S_12_2018/16S_plate_locations.csv",  sep="\t", quote=F, col.names = T, row.names = F)
hm=read.csv("~/Google Drive/pseudomonas_association_mapping/Experiments/infection_9_2019/sept_infection_layout.csv")
head(hm)
hm=read.csv("~/Google Drive/pseudomonas_association_mapping/Experiments/infection_9_2019/sept_infection_layout.csv",header=T)
unlist(hm)
c(hm)
dim(hm)
hm=read.csv("~/Google Drive/pseudomonas_association_mapping/Experiments/infection_9_2019/sept_infection_layout.csv",header=T, row.names = 1)
hm=read.csv("~/Google Drive/pseudomonas_association_mapping/Experiments/infection_9_2019/sept_infection_layout.csv",header=T, row.names = 1)
hm=read.csv("~/Google Drive/pseudomonas_association_mapping/Experiments/infection_9_2019/sept_infection_layout.csv",header=T, row.names = 1)
hm=read.csv("~/Google Drive/pseudomonas_association_mapping/Experiments/infection_9_2019/sept_infection_layout.csv",header=T)
head(hm)
c(hm)
dim(hm)
hm=read.csv("~/Google Drive/pseudomonas_association_mapping/Experiments/infection_9_2019/sept_infection_layout.csv",header=F)
head(hm)
dim(hm)
unlist(hm)
unlist(hm)[1]
unlist(hm)[1:10]
unlist(hm)[1:10]
head(hm)
?unlist
as.vector(hm)
head(hm)
as.vector(hm)[1:6]
c(t(hm))
head(hm)
yes=c(t(hm))
yes
write.table(yes, "~/temp.txt", quote=F)
write.table(yes, "~/temp.txt", quote=F, row.names = F)
